Building for debugging...
[0/3] Write swift-version--58304C5D6DBC2206.txt
Build of product 'AITestApp' complete! (0.08s)
🚀 AITest コンソールアプリケーション開始
OS Version: Version 26.0 (Build 25A354)
================================================================================
✅ iOS 26+ / macOS 26+ の要件を満たしています
🔍 FoundationModelsの利用可能性をチェック中...
🔍 SystemLanguageModel.availability: available
✅ AI利用可能 - ベンチマークを実行します
⏱️ タイムアウト設定: 10秒

🔬 特定実験を開始: @Generableマクロ (日本語)
🔄 指定された抽出方法・言語のみを実行します
------------------------------------------------------------

📋 テストケース 1: Chat Level1 Basic
📝 入力テキスト: Hey! 新しいサーバーのアカウント情報を送るね

AWS EC2にログインするには
アカウントはadmin/SecurePass18329です
でアクセスできるよ

よろしく！
...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
✅ 抽出成功
  ⏱️  抽出時間: 2.242秒
  ⏱️  総時間: 2.244秒
  📊 抽出フィールド数: 5
  ✅ バリデーション: 成功
  📋 抽出結果:
    title: AWS EC2アカウント情報
    userID: admin
    password: SecurePass18329
    note: AWS EC2にログインするための情報です。注意して管理してください。
    authKey: -----BEGIN OPENSSH PRIVATE KEY-----から始まり、-----END OPENSSH PRIVATE KEY-----で終わる複数行の文字列-----

📊 構造化ログ:
{
  "iteration" : 1,
  "unexpected_fields" : [
    {
      "name" : "authKey",
      "value" : "-----BEGIN OPENSSH PRIVATE KEY-----から始まり、-----END OPENSSH PRIVATE KEY-----で終わる複数行の文字列-----",
      "status" : "unexpected"
    }
  ],
  "pattern" : "chat",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "correct",
      "name" : "title",
      "value" : "AWS EC2アカウント情報"
    },
    {
      "value" : "admin",
      "name" : "userID",
      "status" : "correct"
    },
    {
      "value" : "SecurePass18329",
      "name" : "password",
      "status" : "correct"
    },
    {
      "name" : "note",
      "status" : "correct",
      "value" : "AWS EC2にログインするための情報です。注意して管理してください。"
    }
  ]
}
============================================================

📋 テストケース 2: Chat Level2 General
📝 入力テキスト: お疲れ様！昨日話してた新しいプロジェクトのサーバー設定が完了したよ。

AWS EC2インスタンスを立ち上げたから、ログイン情報を共有するね。
ログイン用のアカウントは devops@company....
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
✅ 抽出成功
  ⏱️  抽出時間: 2.305秒
  ⏱️  総時間: 2.306秒
  📊 抽出フィールド数: 6
  ✅ バリデーション: 成功
  📋 抽出結果:
    title: AWS EC2 Instance
    userID: devops@company.com
    password: MySecret2024!
    url: https://console.aws.amazon.com/ec2/
    note: Security groups configured and SSH access on port 22 is open. Database setup expected to be completed by next week.
    authKey: -----BEGIN OPENSSH PRIVATE KEY-----

📊 構造化ログ:
{
  "iteration" : 2,
  "unexpected_fields" : [
    {
      "name" : "url",
      "value" : "https:\/\/console.aws.amazon.com\/ec2\/",
      "status" : "unexpected"
    },
    {
      "value" : "-----BEGIN OPENSSH PRIVATE KEY-----",
      "name" : "authKey",
      "status" : "unexpected"
    }
  ],
  "pattern" : "chat",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "correct",
      "name" : "title",
      "value" : "AWS EC2 Instance"
    },
    {
      "value" : "devops@company.com",
      "status" : "correct",
      "name" : "userID"
    },
    {
      "value" : "MySecret2024!",
      "status" : "correct",
      "name" : "password"
    },
    {
      "value" : "Security groups configured and SSH access on port 22 is open. Database setup expected to be completed by next week.",
      "name" : "note",
      "status" : "correct"
    }
  ]
}
============================================================

📋 テストケース 3: Chat Level3 Complex
📝 入力テキスト: お疲れ様！昨日の会議で話してた新しいプロジェクトのインフラ構築について、進捗を報告するね。

まず、AWS EC2インスタンスのセットアップが完了したよ。t3.mediumのインスタンスを立ち上げて、...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
✅ 抽出成功
  ⏱️  抽出時間: 3.814秒
  ⏱️  総時間: 3.814秒
  📊 抽出フィールド数: 8
  ✅ バリデーション: 警告あり
  📋 抽出結果:
    title: AWS EC2 Instance
    userID: root
    password: SuperSecure2024#
    url: https://console.aws.amazon.com/ec2/
    note: AWS EC2 Instanceのセットアップが完了
セキュリティグループの設定も完了
SSH鍵認証のみでパスワード認証を無効
ファイアウォールで特定のIPアドレスからのみアクセス可能
    host: ec2-54-123-45-67.compute-1.amazonaws.com
    port: 22
    authKey: BEGIN OPENSSH PRIVATE KEY
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEA1234567890abcdef
END OPENSSH PRIVATE KEY

📊 構造化ログ:
{
  "iteration" : 3,
  "unexpected_fields" : [
    {
      "status" : "unexpected",
      "value" : "https:\/\/console.aws.amazon.com\/ec2\/",
      "name" : "url"
    },
    {
      "value" : "ec2-54-123-45-67.compute-1.amazonaws.com",
      "name" : "host",
      "status" : "unexpected"
    },
    {
      "name" : "port",
      "value" : "22",
      "status" : "unexpected"
    },
    {
      "value" : "BEGIN OPENSSH PRIVATE KEY\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEA1234567890abcdef\nEND OPENSSH PRIVATE KEY",
      "status" : "unexpected",
      "name" : "authKey"
    }
  ],
  "pattern" : "chat",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "name" : "title",
      "value" : "AWS EC2 Instance",
      "status" : "correct"
    },
    {
      "name" : "userID",
      "status" : "correct",
      "value" : "root"
    },
    {
      "name" : "password",
      "value" : "SuperSecure2024#",
      "status" : "correct"
    },
    {
      "name" : "note",
      "status" : "correct",
      "value" : "AWS EC2 Instanceのセットアップが完了\nセキュリティグループの設定も完了\nSSH鍵認証のみでパスワード認証を無効\nファイアウォールで特定のIPアドレスからのみアクセス可能"
    }
  ]
}
============================================================

📋 テストケース 4: Contract Level1 Basic
📝 入力テキスト: 第3条 システムアクセス情報

社内システムへのアクセス権限を付与する。
アクセス情報は以下の通りである：
ログインID: employee_2024、パスワード: CorpAccess#789

上...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
✅ 抽出成功
  ⏱️  抽出時間: 1.844秒
  ⏱️  総時間: 1.844秒
  📊 抽出フィールド数: 5
  ✅ バリデーション: 成功
  📋 抽出結果:
    title: 社内システムアクセス
    userID: employee_2024
    password: CorpAccess#789
    note: 社内システムへのアクセスを許可する情報。注意：この情報は機密扱いとして扱ってください。
    authKey: BEGIN-----BEGIN OPENSSH PRIVATE KEY-----END

📊 構造化ログ:
{
  "iteration" : 4,
  "unexpected_fields" : [
    {
      "value" : "BEGIN-----BEGIN OPENSSH PRIVATE KEY-----END",
      "status" : "unexpected",
      "name" : "authKey"
    }
  ],
  "pattern" : "contract",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "correct",
      "value" : "社内システムアクセス",
      "name" : "title"
    },
    {
      "status" : "correct",
      "name" : "userID",
      "value" : "employee_2024"
    },
    {
      "value" : "CorpAccess#789",
      "status" : "correct",
      "name" : "password"
    },
    {
      "name" : "note",
      "value" : "社内システムへのアクセスを許可する情報。注意：この情報は機密扱いとして扱ってください。",
      "status" : "correct"
    },
    {
      "name" : "url",
      "value" : null,
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 5: Contract Level2 General
📝 入力テキスト: 第3条 システムアクセス情報

3.1 アクセス権限の付与
本契約に基づき、社内基幹システムへのアクセス情報を提供する。
システム名: 社内基幹システム
アクセス用アカウント: manager@com...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
⏰ タイムアウト: 10秒経過
🛑 処理を中断します
❌ 抽出失敗: Failed to deserialize a Generable type from model output

📊 構造化ログ（エラー）:
{
  "iteration" : 5,
  "unexpected_fields" : [

  ],
  "pattern" : "contract",
  "error" : "Failed to deserialize a Generable type from model output",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "value" : null,
      "name" : "title",
      "status" : "missing"
    },
    {
      "status" : "missing",
      "name" : "userID",
      "value" : null
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "password"
    },
    {
      "name" : "note",
      "value" : null,
      "status" : "missing"
    },
    {
      "value" : null,
      "name" : "url",
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 6: Contract Level3 Complex
📝 入力テキスト: 第3条 システムアクセス情報及びセキュリティ要件

3.1 アクセス権限の付与
本契約に基づき、社内基幹システム（本番環境）へのアクセス情報を提供する。
【システム情報】
名称: 社内基幹システム（本...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 6,
  "unexpected_fields" : [

  ],
  "pattern" : "contract",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "value" : null,
      "status" : "missing",
      "name" : "title"
    },
    {
      "status" : "missing",
      "value" : null,
      "name" : "userID"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "password"
    },
    {
      "name" : "note",
      "status" : "missing",
      "value" : null
    },
    {
      "status" : "missing",
      "name" : "url",
      "value" : null
    }
  ]
}
============================================================

📋 テストケース 7: CreditCard Level1 Basic
📝 入力テキスト: MASTERCARD
5321 4411 3290 2189
03/26
456
YAMADA TAROSUKE
...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 7,
  "unexpected_fields" : [

  ],
  "pattern" : "creditcard",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "value" : null,
      "status" : "missing",
      "name" : "title"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "userID"
    },
    {
      "name" : "password",
      "value" : null,
      "status" : "missing"
    },
    {
      "name" : "note",
      "value" : null,
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 8: CreditCard Level2 General
📝 入力テキスト: JCB
5115 4321 8329 2382
01/26
406
SAKAI MASASHI

オンライン決済時のみ使用可能
月間利用限度額 50万円
海外利用時は事前に連絡が必要
カード紛失時は即...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 8,
  "unexpected_fields" : [

  ],
  "pattern" : "creditcard",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "missing",
      "name" : "title",
      "value" : null
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "userID"
    },
    {
      "name" : "password",
      "status" : "missing",
      "value" : null
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "note"
    }
  ]
}
============================================================

📋 テストケース 9: CreditCard Level3 Complex
📝 入力テキスト: VISA
4532-3234-5678-9112
11/25
125
KEISUKE INOUE

オンライン決済時のみ使用可能
月間利用限度額: 50万円
海外利用時は事前に連絡が必要
カード紛失時...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 9,
  "unexpected_fields" : [

  ],
  "pattern" : "creditcard",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "missing",
      "value" : null,
      "name" : "title"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "userID"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "password"
    },
    {
      "name" : "note",
      "value" : null,
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 10: VoiceRecognition Level1 Basic
📝 入力テキスト: えー 新しいサーバーのアカウント情報を送るね

AWS EC2にログインするには
アカウントはadmin/SecurePass18329です
でアクセスできるよ

よろしく
...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 10,
  "unexpected_fields" : [

  ],
  "pattern" : "voicerecognition",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "value" : null,
      "status" : "missing",
      "name" : "title"
    },
    {
      "status" : "missing",
      "name" : "userID",
      "value" : null
    },
    {
      "name" : "password",
      "value" : null,
      "status" : "missing"
    },
    {
      "status" : "missing",
      "name" : "note",
      "value" : null
    }
  ]
}
============================================================

📋 テストケース 11: VoiceRecognition Level2 General
📝 入力テキスト: えー お疲れ様 昨日話してた新しいプロジェクトのサーバー設定が完了したよ

AWS EC2インスタンスを立ち上げたから ログイン用のアカウントは devops@company.com / MySecr...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 11,
  "unexpected_fields" : [

  ],
  "pattern" : "voicerecognition",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "name" : "title",
      "value" : null,
      "status" : "missing"
    },
    {
      "status" : "missing",
      "name" : "userID",
      "value" : null
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "password"
    },
    {
      "value" : null,
      "name" : "note",
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 12: VoiceRecognition Level3 Complex
📝 入力テキスト: えー お疲れ様 昨日の会議で話してた新しいプロジェクトのインフラ構築について 進捗を報告するね

まず AWS EC2インスタンスのセットアップが完了したよ t3.mediumのインスタンスを立ち上げ...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 12,
  "unexpected_fields" : [

  ],
  "pattern" : "voicerecognition",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "missing",
      "value" : null,
      "name" : "title"
    },
    {
      "status" : "missing",
      "name" : "userID",
      "value" : null
    },
    {
      "status" : "missing",
      "name" : "password",
      "value" : null
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "note"
    }
  ]
}
============================================================

📋 テストケース 13: PasswordManager Level1 Basic
📝 入力テキスト: name,username,password,url
GitHub,john.doe,GitHubPass2024!,https://github.com
...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: Detected content likely to be unsafe

📊 構造化ログ（エラー）:
{
  "iteration" : 13,
  "unexpected_fields" : [

  ],
  "pattern" : "passwordmanager",
  "error" : "Detected content likely to be unsafe",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "name" : "title",
      "value" : null,
      "status" : "missing"
    },
    {
      "value" : null,
      "name" : "userID",
      "status" : "missing"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "password"
    },
    {
      "name" : "url",
      "value" : null,
      "status" : "missing"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "note"
    }
  ]
}
============================================================

📋 テストケース 14: PasswordManager Level2 General
📝 入力テキスト: name,username,password,url,notes
"AWS EC2","admin","SecurePass123","https://console.aws.amazon.com/e...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: An unsupported language or locale was used

📊 構造化ログ（エラー）:
{
  "iteration" : 14,
  "unexpected_fields" : [

  ],
  "pattern" : "passwordmanager",
  "error" : "An unsupported language or locale was used",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "status" : "missing",
      "name" : "title",
      "value" : null
    },
    {
      "name" : "userID",
      "status" : "missing",
      "value" : null
    },
    {
      "name" : "password",
      "value" : null,
      "status" : "missing"
    },
    {
      "value" : null,
      "name" : "url",
      "status" : "missing"
    },
    {
      "name" : "note",
      "value" : null,
      "status" : "missing"
    }
  ]
}
============================================================

📋 テストケース 15: PasswordManager Level3 Complex
📝 入力テキスト: name,username,password,url,notes,host,port,auth_key
"AWS EC2 Production","admin","SecurePass123!@#",...
----------------------------------------

🔍 抽出方法: @Generableマクロ (日本語)
📝 説明: FoundationModelsの@Generableマクロを使用した構造化抽出 - 日本語プロンプトを使用した抽出
❌ 抽出失敗: An unsupported language or locale was used

📊 構造化ログ（エラー）:
{
  "iteration" : 15,
  "unexpected_fields" : [

  ],
  "pattern" : "passwordmanager",
  "error" : "An unsupported language or locale was used",
  "method" : "generable",
  "language" : "ja",
  "level" : 1,
  "expected_fields" : [
    {
      "value" : null,
      "status" : "missing",
      "name" : "title"
    },
    {
      "value" : null,
      "status" : "missing",
      "name" : "userID"
    },
    {
      "name" : "password",
      "value" : null,
      "status" : "missing"
    },
    {
      "value" : null,
      "name" : "url",
      "status" : "missing"
    },
    {
      "name" : "note",
      "status" : "missing",
      "value" : null
    }
  ]
}
============================================================

📊 特定実験完了
================================================================================
✅ AITest コンソールアプリケーション完了
